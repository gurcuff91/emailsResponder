require('dotenv').config();
const { Agent, Task, Team } = require('kaibanjs');

// Define email categorization agent
// This agent is responsible for categorizing the emails based on their content
// It will analyze the email subject and body to determine the sentiment, intent, and area of the email
// The categorization will be done using a set of predefined categories
const emailCategAgent = new Agent({
    name: 'Greta',
    role: 'Email Categorization',
    goal: `Categorize emails based on their content. 
            The categories are:
                1. Sentiment (Positive, Negative, Neutral)
                2. Intent (Support Request, Feedback, Sales Inquiry)
                3. Area (Product, Billing, Technical)`
})

// Define email reply agent
// This agent is responsible for generating replies to the emails based on their categorization
// It will use the email subject, body, and categorization to generate an appropriate reply
const emailReplyAgent = new Agent({
    name: 'Sofia',
    role: 'Email Responder',
    goal: `Generate appropriate responses to emails based on their content and categorization.`
})

// Define report generation agent
// This agent is responsible for generating a report based on the email categorization and replies
// It will use the email categorization and replies to generate a report in JSON format
// The report will include the categorization and the reply generated by the email reply agent
const reportAgent = new Agent({
    name: 'Jhon',
    role: 'Report generator',
    goal: `Generate a report based on the email categorization and replies.`,
})

// Define email categorization task
// This task is responsible for categorizing the emails based on their content
// It will use the email subject and body to determine the sentiment, intent, and area of the email
// The categorization will be done using a set of predefined categories
// The task will be executed by the email categorization agent
// The expected output will be in JSON format with the categorization details
// The output will include the sentiment, intent, and area of the email
const emailCategTask = new Task({
    title: 'Email Categorization',
    description: `Categorize the email using the email subject {subject} and email body {body}`,
    expectedOutput: 'Categorization as Json format with the keys {sentiment: <value>, intent: <value>, area: <value>}',
    agent: emailCategAgent,
})

// Define email reply task
// This task is responsible for generating replies to the emails based on their categorization
// It will use the email subject, body, and categorization to generate an appropriate reply
// The task will be executed by the email reply agent
const emailReplyTask = new Task({
    title: 'Email Responder',
    description: `Generate a reply to the email according the email subject: {subject}, 
                  email body: {body} and the email categorization: {taskResult:task1}`,
    agent: emailReplyAgent,
})

// Define report generation task
// This task is responsible for generating a report based on the email categorization and replies
// It will use the email categorization and replies to generate a report in JSON format
// The report will include the categorization and the reply generated by the email reply agent
// The task will be executed by the report generation agent
const reportTask = new Task({
    title: 'Report generation',
    description: `Gnenerate a report in JSON format using the email reply: {taskResult:task2} and
                  email categorization: {taskResult:task1}`,
    expectedOutput: 'A JSON with the following keys: {reply: <reply_value>, categorization: <categorization_value>}',
    agent: reportAgent,
})

// Define email reply team
// This team is responsible for categorizing the emails, generating replies, and generating reports
// The team will consist of the email categorization agent, email reply agent, and report generation agent
// The team will use the email categorization task, email reply task, and report generation task
// The team will be responsible for executing the tasks and generating the reports
const emailReplyTeam = new Team({
    name: 'Email Reply Team',
    description: 'Team of agents specialized in categorization and automatic reply to customers emails.',
    agents: [emailCategAgent, emailReplyAgent, reportAgent],
    tasks: [emailCategTask, emailReplyTask, reportTask],
    env: { OPENAI_API_KEY: process.env.OPENAI_API_KEY },
})

module.exports = { emailReplyTeam }